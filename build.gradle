buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'


version = '1.0'
group = 'com.H4T_K1D.modthatisnotamodfortweakingpurposes' 
archivesBaseName = 'modthatisnotamodfortweakingpurposes'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    
    mappings channel: 'official', version: '1.18.2'

 
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

           
            property 'forge.logging.console.level', 'debug'


            property 'forge.enabledGameTestNamespaces', 'modthatisnotamodfortweakingpurposes'

            mods {
                modthatisnotamodfortweakingpurposes {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

          
            property 'forge.enabledGameTestNamespaces', 'modthatisnotamodfortweakingpurposes'

            mods {
                modthatisnotamodfortweakingpurposes {
                    source sourceSets.main
                }
            }
        }


        gameTestServer {
            workingDirectory project.file('run')

           
            property 'forge.logging.markers', 'REGISTRIES'


            property 'forge.logging.console.level', 'debug'

          
            property 'forge.enabledGameTestNamespaces', 'modthatisnotamodfortweakingpurposes'

            mods {
                modthatisnotamodfortweakingpurposes {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

           
            args '--mod', 'modthatisnotamodfortweakingpurposes', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                modthatisnotamodfortweakingpurposes {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'https://dvs1.progwml6.com/files/maven'
    }
    maven {
        name = 'tterrag maven'
        url = 'https://maven.tterrag.com/'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.84'
    implementation fg.deobf("slimeknights.mantle:Mantle:1.18.2-1.9.25")
    implementation fg.deobf("slimeknights.tconstruct:TConstruct:1.18.2-3.5.2.38")
    implementation fg.deobf("com.simibubi.create:create-${create_minecraft_version}:${create_version}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${flywheel_minecraft_version}:${flywheel_version}")
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")
}


jar {
    manifest {
        attributes([
                "Specification-Title"     : "ModThatIsNotAMod",
                "Specification-Vendor"    : "H4T_K1D",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"     
    }
}
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' 
}
